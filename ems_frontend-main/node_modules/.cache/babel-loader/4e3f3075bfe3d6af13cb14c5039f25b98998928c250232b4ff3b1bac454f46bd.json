{"ast":null,"code":"var _jsxFileName = \"D:\\\\EmployeeManagementSystem\\\\ems_frontend-main\\\\src\\\\Components\\\\ManagerComponent\\\\AddProject.js\",\n  _s = $RefreshSig$();\nimport { Alert, Snackbar } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Modal } from 'react-bootstrap';\nimport { useForm } from \"react-hook-form\";\nimport ReactSelect from \"react-select\";\nimport EmployeeService from \"../../Services/EmployeeService\";\nimport ProjectService from \"../../Services/ProjectService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddProject = _ref => {\n  _s();\n  let {\n    show,\n    handleClose,\n    project\n  } = _ref;\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [alert, setAlert] = useState(null);\n  const [alertSeverity, setAlertSeverity] = useState(null);\n  const [open, setOpen] = useState(false);\n  // const [employees, setEmployees] = useState([])\n  // var temp = [];\n  // const handleChange = (e) => {\n  //     setSelectedValue(Array.isArray(e) ? e.map(x => x.value) : []);\n  //   }\n  // const [selectedValue, setSelectedValue] = useState([]);\n  // let data = [];\n  useEffect(() => {\n    // getAllEmployees();\n    console.log('i fire once');\n  }, []);\n  const onSubmit = formState => {\n    d;\n    ProjectService.addProject(formState).then(response => {\n      if (response.status === 200) {\n        setAlert(\"Project added successfully\");\n        setAlertSeverity(\"success\");\n        setOpen(true);\n      } else {\n        setAlert(\"Server error\");\n        setAlertSeverity(\"error\");\n        setOpen(true);\n      }\n    });\n  };\n  // const getAllEmployees = ()=>{\n  //     EmployeeService.getAllEmployees()\n  //     .then(response => {\n  //         if (response.status === 200){\n  //             setAlert(\"\")\n  //             setAlertSeverity(\"success\")\n  //             setOpen(true);\n  //             console.log(response.data)\n  //             // setTimeout(function(){\n\n  //                 debugger\n  //                 response.data.forEach(emp => {\n  //                 if (!temp.includes(emp.id)){\n  //                     data.push({'value': emp.id, 'label': emp.firstName + \" \" + emp.lastName})\n  //                     temp.push(emp.id);\n  //                 }\n\n  //             });\n  //             setTimeout(function(){\n  //                 setEmployees(data)\n  //             }.bind(this), 1000)\n  //             // setTimeout(function(){\n  //             // }.bind(this), 1000)\n  //         }else{\n  //             setAlert(\"Server error\")\n  //             setAlertSeverity(\"error\")\n  //             setOpen(true);\n  //         }\n  //     })\n  // }\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        open: open,\n        autoHideDuration: 1000,\n        onClose: () => setOpen(false),\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: alertSeverity,\n          sx: {\n            width: '100%'\n          },\n          children: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        hidden: true,\n        name: \"userId\",\n        id: \"userId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Project Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ...register('projectName', {\n              required: true\n            }),\n            type: 'text',\n            className: \"form-control\",\n            placeholder: \"Enter project name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row p-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row p-2 justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn btn-success w-50\",\n            value: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(AddProject, \"+V82EYmHb2O2sFF6El7nV2ExbNg=\", false, function () {\n  return [useForm];\n});\n_c = AddProject;\nexport default AddProject;\nvar _c;\n$RefreshReg$(_c, \"AddProject\");","map":{"version":3,"names":["Alert","Snackbar","React","useEffect","useState","Modal","useForm","ReactSelect","EmployeeService","ProjectService","jsxDEV","_jsxDEV","AddProject","_ref","_s","show","handleClose","project","user","JSON","parse","localStorage","getItem","alert","setAlert","alertSeverity","setAlertSeverity","open","setOpen","console","log","onSubmit","formState","d","addProject","then","response","status","register","handleSubmit","errors","onHide","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","autoHideDuration","onClose","severity","sx","width","type","className","hidden","name","id","required","placeholder","value","Footer","_c","$RefreshReg$"],"sources":["D:/EmployeeManagementSystem/ems_frontend-main/src/Components/ManagerComponent/AddProject.js"],"sourcesContent":["import { Alert, Snackbar } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Modal } from 'react-bootstrap';\nimport { useForm } from \"react-hook-form\";\nimport ReactSelect from \"react-select\";\nimport EmployeeService from \"../../Services/EmployeeService\";\nimport ProjectService from \"../../Services/ProjectService\";\n\n\nconst AddProject = ({show, handleClose, project})=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const [alert, setAlert] = useState(null);\n    const [alertSeverity, setAlertSeverity] = useState(null);\n    const [open, setOpen] = useState(false);\n    // const [employees, setEmployees] = useState([])\n    // var temp = [];\n    // const handleChange = (e) => {\n    //     setSelectedValue(Array.isArray(e) ? e.map(x => x.value) : []);\n    //   }\n    // const [selectedValue, setSelectedValue] = useState([]);\n    // let data = [];\n    useEffect(()=> {\n        // getAllEmployees();\n        console.log('i fire once');\n    }, [])\n\n    const onSubmit = (formState)=>{\n        d\n        ProjectService.addProject(formState)\n        .then(response => {\n            if (response.status === 200){\n\n                setAlert(\"Project added successfully\")\n                setAlertSeverity(\"success\")\n                setOpen(true);\n            }else{\n                setAlert(\"Server error\")\n                setAlertSeverity(\"error\")\n                setOpen(true);\n            }\n        }\n        )\n    }\n    // const getAllEmployees = ()=>{\n    //     EmployeeService.getAllEmployees()\n    //     .then(response => {\n    //         if (response.status === 200){\n    //             setAlert(\"\")\n    //             setAlertSeverity(\"success\")\n    //             setOpen(true);\n    //             console.log(response.data)\n    //             // setTimeout(function(){\n                    \n    //                 debugger\n    //                 response.data.forEach(emp => {\n    //                 if (!temp.includes(emp.id)){\n    //                     data.push({'value': emp.id, 'label': emp.firstName + \" \" + emp.lastName})\n    //                     temp.push(emp.id);\n    //                 }\n                        \n    //             });\n    //             setTimeout(function(){\n    //                 setEmployees(data)\n    //             }.bind(this), 1000)\n    //             // setTimeout(function(){\n    //             // }.bind(this), 1000)\n    //         }else{\n    //             setAlert(\"Server error\")\n    //             setAlertSeverity(\"error\")\n    //             setOpen(true);\n    //         }\n    //     })\n    // }\n    const {\n        register,\n        handleSubmit,\n        formState: { errors},\n      } = useForm();\n    return(\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Add Project</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Snackbar open={open} autoHideDuration={1000} onClose={() => setOpen(false)}>\n                <Alert severity={alertSeverity} sx={{ width: '100%' }}>\n                    {alert}\n                </Alert>\n            </Snackbar>\n            <input type=\"text\" className=\"form-control\" hidden name=\"userId\" id=\"userId\" />\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"row p-2\">\n                    <label>Project Name</label>\n                    <br/>\n                    <input {...register('projectName', { required: true })} type={'text'} className=\"form-control\" placeholder=\"Enter project name\"/>\n                </div>\n                <div className=\"row p-2\">\n                {/* <ReactSelect\n                    className=\"dropdown w-100\"\n                    placeholder=\"Select Option\"\n                    value={employees.filter(obj => selectedValue.includes(obj.value))} // set selected values\n                    options={employees} // set list of the data\n                    onChange={handleChange} // assign onChange function\n                    isMulti\n                    isClearable\n                /> */}\n                </div>\n                <div className=\"row p-2 justify-content-center\">\n                    <input type=\"submit\" className=\"btn btn-success w-50\" value=\"Add\"/>\n                </div>\n            </form>\n            </Modal.Body>\n            <Modal.Footer>\n\n            </Modal.Footer>\n        </Modal>\n    )\n}\nexport default AddProject;"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAC/C,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,eAAe,MAAM,gCAAgC;AAC5D,OAAOC,cAAc,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3D,MAAMC,UAAU,GAAGC,IAAA,IAAgC;EAAAC,EAAA;EAAA,IAA/B;IAACC,IAAI;IAAEC,WAAW;IAAEC;EAAO,CAAC,GAAAJ,IAAA;EAC5C,MAAMK,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACvC;EACA;EACA;EACA;EACA;EACA;EACA;EACAD,SAAS,CAAC,MAAK;IACX;IACA0B,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,QAAQ,GAAIC,SAAS,IAAG;IAC1BC,CAAC;IACDxB,cAAc,CAACyB,UAAU,CAACF,SAAS,CAAC,CACnCG,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;QAExBb,QAAQ,CAAC,4BAA4B,CAAC;QACtCE,gBAAgB,CAAC,SAAS,CAAC;QAC3BE,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,MAAI;QACDJ,QAAQ,CAAC,cAAc,CAAC;QACxBE,gBAAgB,CAAC,OAAO,CAAC;QACzBE,OAAO,CAAC,IAAI,CAAC;MACjB;IACJ,CAAC,CACA;EACL,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM;IACFU,QAAQ;IACRC,YAAY;IACZP,SAAS,EAAE;MAAEQ;IAAM;EACrB,CAAC,GAAGlC,OAAO,EAAE;EACf,oBACIK,OAAA,CAACN,KAAK;IAACU,IAAI,EAAEA,IAAK;IAAC0B,MAAM,EAAEzB,WAAY;IAAA0B,QAAA,gBACnC/B,OAAA,CAACN,KAAK,CAACsC,MAAM;MAACC,WAAW;MAAAF,QAAA,eACrB/B,OAAA,CAACN,KAAK,CAACwC,KAAK;QAAAH,QAAA,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAc;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B,eACftC,OAAA,CAACN,KAAK,CAAC6C,IAAI;MAAAR,QAAA,gBACX/B,OAAA,CAACV,QAAQ;QAAC0B,IAAI,EAAEA,IAAK;QAACwB,gBAAgB,EAAE,IAAK;QAACC,OAAO,EAAEA,CAAA,KAAMxB,OAAO,CAAC,KAAK,CAAE;QAAAc,QAAA,eACxE/B,OAAA,CAACX,KAAK;UAACqD,QAAQ,EAAE5B,aAAc;UAAC6B,EAAE,EAAE;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAb,QAAA,EACjDnB;QAAK;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD,eACXtC,OAAA;QAAO6C,IAAI,EAAC,MAAM;QAACC,SAAS,EAAC,cAAc;QAACC,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAC;MAAQ;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC/EtC,OAAA;QAAMoB,QAAQ,EAAEQ,YAAY,CAACR,QAAQ,CAAE;QAAAW,QAAA,gBACnC/B,OAAA;UAAK8C,SAAS,EAAC,SAAS;UAAAf,QAAA,gBACpB/B,OAAA;YAAA+B,QAAA,EAAO;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eAC3BtC,OAAA;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACLtC,OAAA;YAAA,GAAW2B,QAAQ,CAAC,aAAa,EAAE;cAAEuB,QAAQ,EAAE;YAAK,CAAC,CAAC;YAAEL,IAAI,EAAE,MAAO;YAACC,SAAS,EAAC,cAAc;YAACK,WAAW,EAAC;UAAoB;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC/H,eACNtC,OAAA;UAAK8C,SAAS,EAAC;QAAS;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAUlB,eACNtC,OAAA;UAAK8C,SAAS,EAAC,gCAAgC;UAAAf,QAAA,eAC3C/B,OAAA;YAAO6C,IAAI,EAAC,QAAQ;YAACC,SAAS,EAAC,sBAAsB;YAACM,KAAK,EAAC;UAAK;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACM,eACbtC,OAAA,CAACN,KAAK,CAAC2D,MAAM;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACX;AAEhB,CAAC;AAAAnC,EAAA,CA5GKF,UAAU;EAAA,QAoENN,OAAO;AAAA;AAAA2D,EAAA,GApEXrD,UAAU;AA6GhB,eAAeA,UAAU;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}