{"ast":null,"code":"var _jsxFileName = \"D:\\\\EmployeeManagementSystem\\\\ems_frontend-main\\\\src\\\\Components\\\\Cards\\\\ProjectCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactSelect from \"react-select\";\nimport EmployeeService from \"../../Services/EmployeeService\";\nimport ProjectService from \"../../Services/ProjectService\";\nimport AddProject from \"../ManagerComponent/AddProject\";\nimport AssignProject from \"./AssignProjectCard\";\nimport EmployeeCard from \"./EmployeeCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProjectCard = () => {\n  _s();\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const [showAddProjectModal, setsShowAddProjectModal] = useState(false);\n  const [show, setShow] = useState(false);\n  const handleShow = () => setShow(true);\n  const handleClose = () => setShow(false);\n  const [selectedValue, setSelectedValue] = useState([]);\n  var temp = [];\n  const [projectList, setProjectList] = useState([]);\n  const [alert, setAlert] = useState(null);\n  const [alertSeverity, setAlertSeverity] = useState(null);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    getAllProjects();\n  }, []);\n  const getAllProjects = () => {\n    ProjectService.getAllProjects().then(response => {\n      if (response.status === 200) {\n        console.log(response.data);\n        setAlert(\"Fetched all projects\");\n        setAlertSeverity(\"success\");\n        setOpen(true);\n        response.data.forEach(element => {\n          ProjectService.getAllEmployeesByProject(element.id).then(response2 => {\n            if (response2.status === 200) {\n              var emplo = \"\";\n              response2.data.forEach(emp => {\n                if (emp.firstName != undefined && emp.firstName != null) {\n                  emplo += emp.firstName + \",\";\n                }\n              });\n              element[\"employees\"] = emplo;\n            }\n          });\n        });\n        setTimeout(function () {\n          setProjectList(response.data);\n        }.bind(this), 1000);\n      } else {\n        setAlert(\"No records found\");\n        setAlertSeverity(\"error\");\n        setOpen(true);\n      }\n    });\n  };\n  const assignProject = projectId => {\n    selectedValue.forEach(empId => {\n      debugger;\n      ProjectService.assignProjectToEmployees({\n        \"empId\": empId,\n        \"projectId\": projectId\n      }).then(response => {\n        if (response.status === 200) {\n          setAlert(\"Project added successfully\");\n          setAlertSeverity(\"success\");\n          setOpen(true);\n          setTimeout(function () {\n            console.log(response.data);\n          }.bind(this), 100);\n        } else {\n          setAlert(\"Server error\");\n          setAlertSeverity(\"error\");\n          setOpen(true);\n        }\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: [show ? /*#__PURE__*/_jsxDEV(AddProject, {\n        show: show,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"header-text\",\n        children: \"Assigned projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), user.position.role === 'MANAGER' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mt-2 float-right\",\n        onClick: e => setsShowAddProjectModal(handleShow),\n        children: \"Add project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), projectList.map(project => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: project.employees === '' && user.position.role === 'M' ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card shadow p-1 mb-3 bg-white rounded projects-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: project.projectName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"card-subtitle mb-2 text-muted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [\"Project Members : \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: project.employees\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 80\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 37\n              }, this), user.position.role === 'MANAGER' ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-info float-right\",\n                onClick: e => assignProject(project.id),\n                children: \"Assign\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 41\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 12\n  }, this);\n};\n_s(ProjectCard, \"5sx5J7/thMr1uT7RYAR0RISx/Og=\");\n_c = ProjectCard;\nexport default ProjectCard;\nvar _c;\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"names":["React","useEffect","useState","ReactSelect","EmployeeService","ProjectService","AddProject","AssignProject","EmployeeCard","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectCard","_s","user","JSON","parse","localStorage","getItem","showAddProjectModal","setsShowAddProjectModal","show","setShow","handleShow","handleClose","selectedValue","setSelectedValue","temp","projectList","setProjectList","alert","setAlert","alertSeverity","setAlertSeverity","open","setOpen","getAllProjects","then","response","status","console","log","data","forEach","element","getAllEmployeesByProject","id","response2","emplo","emp","firstName","undefined","setTimeout","bind","assignProject","projectId","empId","assignProjectToEmployees","children","className","fileName","_jsxFileName","lineNumber","columnNumber","position","role","onClick","e","map","project","employees","projectName","_c","$RefreshReg$"],"sources":["D:/EmployeeManagementSystem/ems_frontend-main/src/Components/Cards/ProjectCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactSelect from \"react-select\";\nimport EmployeeService from \"../../Services/EmployeeService\";\nimport ProjectService from \"../../Services/ProjectService\";\nimport AddProject from \"../ManagerComponent/AddProject\";\nimport AssignProject from \"./AssignProjectCard\";\nimport EmployeeCard from \"./EmployeeCard\";\n\nconst ProjectCard = () => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const [showAddProjectModal, setsShowAddProjectModal] = useState(false)\n    const [show, setShow] = useState(false)\n    const handleShow = ()=> setShow(true)\n    const handleClose = ()=> setShow(false)\n    const [selectedValue, setSelectedValue] = useState([]);\n    var temp = [];\n\n    const [projectList, setProjectList] = useState([])\n    const [alert, setAlert] = useState(null);\n    const [alertSeverity, setAlertSeverity] = useState(null);\n    const [open, setOpen] = useState(false);\n\n    useEffect(()=> {\n        getAllProjects();\n    }, [])\n\n    const getAllProjects = ()=>{\n        ProjectService.getAllProjects()\n        .then(response => {\n            if (response.status === 200){\n                console.log(response.data)\n                setAlert(\"Fetched all projects\")\n                setAlertSeverity(\"success\")\n                setOpen(true);\n                \n                response.data.forEach(element => {\n                    ProjectService.getAllEmployeesByProject(element.id)\n                    .then(response2 => {\n                        if (response2.status === 200){\n                            var emplo = \"\";\n                            response2.data.forEach(emp => {\n                                if (emp.firstName != undefined && emp.firstName != null){\n                                    emplo += emp.firstName + \",\";\n                                }\n                                    \n                            });\n                            element[\"employees\"] = emplo;\n                            \n                        }\n                    })\n                });\n                setTimeout(function(){\n                    setProjectList(response.data)\n                }.bind(this), 1000)\n                \n            }else{\n                setAlert(\"No records found\")\n                setAlertSeverity(\"error\")\n                setOpen(true);\n            }\n        })\n    }\n    const assignProject = (projectId) =>{\n        selectedValue.forEach((empId) => {\n            debugger\n            ProjectService.assignProjectToEmployees({\"empId\": empId, \"projectId\": projectId})\n            .then(response => {\n                if (response.status === 200){\n                    setAlert(\"Project added successfully\")\n                    setAlertSeverity(\"success\")\n                    setOpen(true);\n                    setTimeout(function(){\n                        console.log(response.data)\n                    }.bind(this), 100)\n                }else{\n                    setAlert(\"Server error\")\n                    setAlertSeverity(\"error\")\n                    setOpen(true);\n                }\n            }\n            )\n        })\n        \n    }\n    return <div>\n        <div className=\"card-container\">\n            {show ? <AddProject show={show} handleClose={handleClose}/> : null}\n            <span className=\"header-text\">Assigned projects</span>\n            {\n                user.position.role === 'MANAGER'?\n                <button  className=\"btn btn-success mt-2 float-right\" onClick={(e)=> setsShowAddProjectModal(handleShow)}>Add project</button>\n                : \n                null\n            }\n            \n            <hr/>\n            {\n                projectList.map((project) => {\n                    return (\n                        <>{\n                            project.employees === '' && user.position.role === 'M'? null\n                            :\n                            <div className=\"card shadow p-1 mb-3 bg-white rounded projects-card\">\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">{project.projectName}</h5>\n                                    <h6 className=\"card-subtitle mb-2 text-muted\"></h6>\n                                    <p className=\"card-text\">Project Members : <b>{project.employees}</b></p>\n                                    {/* <Multiselect options={objectArray} displayValue=\"key\" onSelect={(e) => } placeholder=\"Assign member\"/> */}\n                                    <br/>\n                                    {\n                                        user.position.role === 'MANAGER'?\n                                        <button className=\"btn btn-sm btn-info float-right\" onClick={(e) => assignProject(project.id)}>Assign</button>\n                                        : \n                                        null\n                                    }\n                                </div>\n\n                            </div>\n                            }\n                        </>\n                        \n                    )\n                })\n            }\n            \n            </div>\n            \n        </div>\n\n}\n\nexport default ProjectCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}